{"version":3,"sources":["cryptomonedas.png","hooks/useMoneda.js","hooks/useCryptomoneda.js","components/Error.js","components/Formulario.js","components/Cotizacion.js","App.js","index.js"],"names":["Label","styled","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCryptomoneda","CoinInfo","Name","FullName","Id","MensajeError","p","Error","mensaje","Boton","input","Formulario","guardarMoneda","guardarCripto","listaCripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Contenedor","Imagen","img","Heading","h1","App","guardarResultado","url","DISPLAY","cotizarCriptomoneda","src","imagen","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8121557.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React,{Fragment,useState} from 'react'\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n    font-family: 'Bebas Neue',cursive;\n    color: #FFF;\n    text-transform:uppercase;\n    font-weight:bold;\n    font-size: 2.4rem;\n    margin-top:2rem;\n    display:block;\n`;\n\nconst Select = styled.select`\n    width:100%;\n    display:block;\n    padding:1rem;\n    -webkit-appearance:none;\n    border-radius:10px;\n    border:none;\n    font-size:1.2rem;\n`;\n\n\nconst useMoneda = (label,stateInicial,opciones) =>{\n\n    //State del Custom Hook\n\n    const [state,actualizarState] = useState(stateInicial);\n    const Seleccionar = ()=>(\n        <Fragment>\n            <Label>{label}</Label>\n            <Select\n                onChange={e=>actualizarState(e.target.value)}\n                value={state}\n            >\n                <option value=\"\">--Selecionnar--</option>\n                {opciones.map(opcion =>(\n                    <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre} </option>\n                ))}\n                \n            </Select>\n        </Fragment>\n    );\n    //Retornar state, interfaz y funcion que modifica el state\n    return [state,Seleccionar,actualizarState];\n}\nexport default useMoneda;","import React,{Fragment,useState} from 'react'\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n    font-family: 'Bebas Neue',cursive;\n    color: #FFF;\n    text-transform:uppercase;\n    font-weight:bold;\n    font-size: 2.4rem;\n    margin-top:2rem;\n    display:block;\n`;\n\nconst Select = styled.select`\n    width:100%;\n    display:block;\n    padding:1rem;\n    -webkit-appearance:none;\n    border-radius:10px;\n    border:none;\n    font-size:1.2rem;\n`;\n\n\nconst useCryptomoneda = (label,stateInicial,opciones) =>{\n\n    //State del Custom Hook\n\n    const [state,actualizarState] = useState(stateInicial);\n    const SeleccionarCripto = ()=>(\n        <Fragment>\n            <Label>{label}</Label>\n            <Select\n                onChange={e=>actualizarState(e.target.value)}\n                value={state}\n            >\n                <option value=\"\">--Selecionnar--</option>\n                {opciones.map(opcion =>(\n                    <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName} </option>\n                ))}\n                \n            </Select>\n        </Fragment>\n    );\n    //Retornar state, interfaz y funcion que modifica el state\n    return [state,SeleccionarCripto,actualizarState];\n}\nexport default useCryptomoneda;","import React from 'react'\nimport styled from '@emotion/styled';\n\nconst MensajeError = styled.p`\n    background-color: #b7322c;\n    padding:1rem;\n    color:#FFF;\n    font-size:30px;\n    text-transform:uppercase;\n    font-weight:bold;\n    text-align:center;\n    font-family: 'Bebas Neue',cursive;\n`;\n\nconst Error = ({mensaje})=>{\n    return (\n        <MensajeError>\n            {mensaje}\n        </MensajeError>\n    );\n}\n\nexport default Error;","import React, { useEffect,useState} from 'react'\nimport styled from '@emotion/styled';\nimport useMoneda from '../hooks/useMoneda';\nimport useCryptomoneda from '../hooks/useCryptomoneda';\nimport axios from 'axios';\nimport Error from './Error';\n\nconst Boton = styled.input`\n    margin-top:20px;\n    font-weight:bold;\n    font-size:20px;\n    padding:10px;\n    background-color: #66A2FE;\n    border: none;\n    width: 100px;\n    border-radius: 10px;\n    color: #FFF;\n    transition: background-color .3s ease;\n    &:hover {\n        background-color: #326Ac0;\n        cursor:pointer;\n    }\n`;\n\n\n\nconst Formulario=({guardarMoneda,guardarCripto})=> {\n\n    //state del listado\n    const [listaCripto,guardarCriptomonedas]= useState([]);\n    const [error,guardarError] = useState(false);\n    const MONEDAS = [\n        {codigo: 'USD', nombre:'Dolar de Estados Unidos'},\n        {codigo: 'MXN', nombre:'Peso Mexicano'},\n        {codigo: 'EUR', nombre:'Euro'},\n        {codigo: 'GBP', nombre:'Libra Esterlina'},\n    ]\n\n    //Utilizar mi custom hook\n    const [moneda,SelectMonedas] = useMoneda('Elije tu moneda','',MONEDAS);\n\n    //Utilizar cryptomoneda\n    const [criptomoneda, SelectCripto] = useCryptomoneda('Elije tu Cryptomoneda','',listaCripto);\n\n    useEffect(()=>{\n        const consultarAPI = async ()=>{\n            const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\n            const resultado = await axios.get(url);\n\n            guardarCriptomonedas(resultado.data.Data);\n        }\n        consultarAPI();\n    },[]);\n    const cotizarMoneda = e =>{\n        e.preventDefault();\n        if(moneda ===''|| criptomoneda ===''){\n            guardarError(true);\n            return;\n        }\n        guardarError(false);\n        guardarMoneda(moneda);\n        guardarCripto(criptomoneda);\n    }\n    return (\n        <form\n        onSubmit={cotizarMoneda}\n        >\n            {error ? <Error mensaje=\"Todos los campos son obligatorios\"/>:null}\n            <SelectMonedas />\n            <SelectCripto/>\n            <Boton\n                type=\"submit\"\n                value=\"Calcular\"\n            />\n        </form>\n    );\n}\nexport default Formulario;\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst ResultadoDiv =styled.div`\n    color:#FFF;\n    font-family:Arial,Helvetica,sans-serif;\n`;\nconst Info =styled.p`\n    font-size:18px;\n    span{\n        font-weight:bold;\n    }\n`;\nconst Precio =styled.p`\n    font-size:30px;\n`;\n\n\n\n\nconst Cotizacion=({resultado}) =>{\n    if(Object.keys(resultado).length ===0) return null;\n    return (\n        <ResultadoDiv>\n            <Precio>El precio es: <span>{resultado.PRICE}</span></Precio>\n            <Info>El precio mas alto del dia es: <span>{resultado.HIGHDAY}</span></Info>\n            <Info>El precio mas bajo del dia es: <span>{resultado.LOWDAY}</span></Info>\n            <Info>Variacion ultimas 24 hrs: <span>{resultado.CHANGEPCT24HOUR}</span></Info>\n            <Info>Ultima Actualizacion: <span>{resultado.LASTUPDATE}</span></Info>\n\n\n\n        </ResultadoDiv>\n\n    );\n}\nexport default Cotizacion;","import React, { useState,useEffect} from 'react'\nimport styled from '@emotion/styled';\nimport imagen from './cryptomonedas.png';\nimport Formulario from './components/Formulario';\nimport axios from 'axios';\nimport Cotizacion from './components/Cotizacion';\n\nconst Contenedor = styled.div`\n    max-width:900px;\n    margin: 0 auto;\n    @media (min-width:992px){\n        display:grid;\n        grid-template-columns: repeat(2,1fr);\n        column-gap: 2rem;\n    }\n`;\nconst Imagen = styled.img`\n    max-width: 100%;\n    margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n    font-family: 'Bebas Neue', cursive;\n    color: #FFF;\n    text-align:left;\n    font-wigth:700;\n    font-size:50px;\n    margin-bottom: 50px;\n    margin-top: 80px;\n\n    &::after {\n        content:'';\n        width:100px;\n        height:6px;\n        background-color: #66A2FE;\n        display:block\n    }\n`;\n\n\nexport default function App() {\n\n    const [moneda, guardarMoneda] = useState('')\n    const [criptomoneda, guardarCripto] = useState('')\n    const [resultado, guardarResultado] = useState({});\n\n    useEffect(()=>{\n        const cotizarCriptomoneda = async()=>{\n\n            //Evitar la ejecucion\n            if(moneda==='')return;\n    \n            const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n            const resultado = await axios.get(url);\n            guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n        }\n        cotizarCriptomoneda();\n    },[moneda,criptomoneda]);\n\n    return (\n        <Contenedor>\n            <div>\n                <Imagen\n                src={imagen}\n                alt=\"Imagen de Criptomonedas\"\n                />\n            </div>\n            <div>\n                <Heading>Cotizador de Criptomonedas</Heading>\n                \n                <Formulario\n                    guardarMoneda={guardarMoneda}\n                    guardarCripto={guardarCripto}\n                />\n                <Cotizacion\n                resultado={resultado}/>\n            </div>\n\n        </Contenedor>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}